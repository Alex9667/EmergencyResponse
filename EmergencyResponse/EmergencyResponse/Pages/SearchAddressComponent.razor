@page "/searchAddress"
@using EmergencyResponse.DTO
@using EmergencyResponse.Model
@using EmergencyResponse.Controller

<h3>Søg efter adresse</h3>
<h2>Address Details</h2>
<div style="display: flex;">
    <div class="container">
        <div class="input-wrapper">
            <form @onsubmit="SearchAddress">
                <div>
                    <label for="street">Vejnavn:</label>
                    <input type="text" id="street" name="street" @bind="searchAddress.StreetName" />
                </div>
                <div>
                    <label for="houseNumber">Husnummer:</label>
                    <input type="text" id="houseNumber" name="houseNumber" @bind="searchAddress.HouseNumber" />
                </div>
                <div>
                    <label for="postalCode">Postnummer:</label>
                    <input type="text" id="postalCode" name="postalCode" @bind="searchAddress.PostalCode" />
                </div>
                <div>
                    <label for="postalCodeName">By:</label>
                    <input type="text" id="postalCodeName" name="postalCodeName" @bind="searchAddress.PostalCodeName" />
                </div>
                <div>
                    <label for="floor">Etage:</label>
                    <input type="text" id="floor" name="floor" @bind="searchAddress.Floor" />
                </div>
                <div>
                    <label for="door">Dør:</label>
                    <input type="text" id="door" name="door" @bind="searchAddress.Door" />
                </div>
                <button type="submit">Submit</button>
            </form>
        </div>
        @if (possibleAddresses.Count > 0)
        {
            <p>Vælg den rigtige adresse</p>
            <div class="table-container" id="tableContainer">
                <table class="table">
                    <thead>
                        <tr>
                            <th>BFE</th>
                            <th>StreetName</th>
                            <th>HouseNumber</th>
                            <th>Floor</th>
                            <th>Door</th>
                            <th>PostalCode</th>
                            <th>PostalCodeName</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var address in possibleAddresses)
                        {
                            <tr>
                                <td>TEMP BFE</td>
                                <td>@address.StreetName</td>
                                <td>@address.HouseNumber</td>
                                <td>@address.Floor</td>
                                <td>@address.Door</td>
                                <td>@address.PostalCode</td>
                                <td>@address.PostalCodeName</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
    <div style="flex: 1;">
        @if (selectedAddress != null)
        {
            <p>Vælg hvad du gør nu</p>
            @selectedAddress.StreetName
            <button>
                Få omkringliggende ejendomme
            </button>
        }
    </div>
</div>



<style>
    .list-item {
        list-style-type: none; /* Remove bullet points */
        padding: 10px; /* Add padding */
        cursor: pointer; /* Change cursor to pointer on hover */
    }

    .list-item:hover {
        background-color: lightgray; /* Change background color on hover */
    }

    .container {
        display: flex;
    }

    .input-wrapper {
        margin-right: 50px; /* Adjust spacing between input field and table */
    }

    .table-container {
        border-radius: 15px;
        overflow: hidden; /* Ensures rounded corners are visible */
        flex: 1; /* Allow the table container to grow and fill available space */
    }

    .table {
        border-radius: 15px;
        overflow: hidden;
    }

    .table td, .table th {
        border: 1px solid #ededed;
        padding: 8px;
        color: white;
    }

    .table tr:nth-child(even) {
        background-color: #302e2d;
    }

    .table tr {
        background-color: #302e2d;
    }

        .table tr:hover {
            background-color: #04AA6D;
        }

    .table th {
        padding-top: 12px;
        padding-bottom: 12px;
        text-align: left;
        background-color: #6e6a69;
        color: white;
    }
</style>

@code {
    public AddressDTO searchAddress = new AddressDTO();
    public List<AddressDTO> possibleAddresses = new List<AddressDTO>();
    public AddressDTO selectedAddress;

    public async Task SearchAddress()
    {
        var httpClient = new HttpClient();
        var addressController = new AddressController(httpClient);
        possibleAddresses = await addressController.SearchAddress(searchAddress);
    }
    public void SelectAddress(AddressDTO address)
    {
        selectedAddress = address;
        possibleAddresses.Clear();
    }
}
