@page "/searchAddress"
@using EmergencyResponse.DTO
@using EmergencyResponse.ExternalServices
@using EmergencyResponse.ExternalServices.Interfaces
@using EmergencyResponse.Model
@using EmergencyResponse.Controller
@inject IDataforsyningService dataforsyningService
@inject IDatafordelerenService dataFordelerenService

<h3>Søg efter adresse</h3>
<h2>Address Details</h2>
<div style ="display: flex;">
    <div style="flex: 1;">
        <div>
            <form @onsubmit="SearchAddress">
                <div>
                    <label for="street">Vejnavn:</label>
                    <input type="text" id="street" name="street" @bind="searchAddress.StreetName" />
                </div>
                <div>
                    <label for="houseNumber">Husnummer:</label>
                    <input type="text" id="houseNumber" name="houseNumber" @bind="searchAddress.HouseNumber" />
                </div>
                <div>
                    <label for="postalCode">Postnummer:</label>
                    <input type="text" id="postalCode" name="postalCode" @bind="searchAddress.PostalCode" />
                </div>
                <div>
                    <label for="postalCodeName">By:</label>
                    <input type="text" id="postalCodeName" name="postalCodeName" @bind="searchAddress.PostalCodeName" />
                </div>
                <div>
                    <label for="floor">Etage:</label>
                    <input type="text" id="floor" name="floor" @bind="searchAddress.Floor" />
                </div>
                <div>
                    <label for="door">Dør:</label>
                    <input type="text" id="door" name="door" @bind="searchAddress.Door" />
                </div>
                <button type="submit" >Submit</button>
            </form>
        </div>
        <div>
        @if (possibleAddresses.Count > 0)
        {
            <p>Vælg den rigtige adresse</p>
            <ul>
                @foreach (var address in possibleAddresses)
                {
                    <li class="list-item" @onclick="() => SelectAddress(address)">
                        @address.StreetName @address.HouseNumber
                        @address.PostalCode @address.PostalCodeName
                    </li>
                }
            </ul>
        }
        </div>
    </div>
    <div style="flex: 1;">
        @if(selectedAddress != null)
        {
            <p>Vælg hvad du gør nu</p>
            @selectedAddress.StreetName
            
        }
    </div>
</div>

<style>
    .list-item {
        list-style-type: none; /* Remove bullet points */
        padding: 10px; /* Add padding */
        cursor: pointer; /* Change cursor to pointer on hover */
    }

    .list-item:hover {
        background-color: lightgray; /* Change background color on hover */
    }
</style>

@code {
    public AddressDTO searchAddress = new AddressDTO();
    public List<AddressDTO> possibleAddresses = new List<AddressDTO>();
    public AddressDTO selectedAddress;

    public async Task SearchAddress()
    {
        // var httpClient = new HttpClient();
        // var addressController = new AddressController(httpClient);
        possibleAddresses = await dataforsyningService.SearchAddress(searchAddress);
    }
    public void SelectAddress(AddressDTO address)
    {
        selectedAddress = address;
        possibleAddresses.Clear();
    }
}
